// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.241.1/containers/javascript-node-mongo
// Update the VARIANT arg in docker-compose.yml to pick a Node.js version
{
  "name": "Node.js & Mongo DB",
  "dockerComposeFile": "docker-compose.yml",
  "service": "codespace",
  "workspaceFolder": "/workspace",

  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        "dbaeumer.vscode-eslint",
        "mongodb.mongodb-vscode",
        "WallabyJs.quokka-vscode",
        "vivaxy.vscode-conventional-commits",
        "ms-azuretools.vscode-docker",
        "esbenp.prettier-vscode",
        "WallabyJs.wallaby-vscode",
        "gabrielgrinberg.auto-run-command",
        "mutantdino.resourcemonitor",
        "Prisma.prisma-insider",
        "eg2.vscode-npm-script"
      ],
      "settings": {
        "quokka.automaticRestart": true,
        "quokka.automaticStartRegex": "qscratch.ts",
        "quokka.suppressExpirationNotifications": true,
        "quokka.showValueOnMultilineSelection": true,
        "quokka.compactMessageOutput": true,
        "quokka.colors": {
          "covered": "#62b455",
          "errorPath": "#ffa0a0",
          "errorSource": "#fe536a",
          "notCovered": "#cccccc",
          "partiallyCovered": "#d2a032"
        },
        "resmon.show.cpufreq": false,
        "resmon.show.disk": true,
        "resmon.disk.format": "PercentRemaining",
        "resmon.disk.drives": ["/dev/sda1"]
      }
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [3000, 27017, 26257],

  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "yarn",

  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "node",
  "features": {
    "docker-in-docker": "20.10",
    "kubectl-helm-minikube": "1.23",
    "terraform": "1.2",
    "git": "os-provided",
    "git-lfs": "latest",
    "github-cli": "latest",
    "homebrew": "latest",
    "fish": "latest",
    "python": "os-provided",
    "golang": "1.18",
    "rust": "1.55"
  }
}
